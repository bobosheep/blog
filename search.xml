<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Windows 特別的 EOF：^Z &lt;0x1A&gt;</title>
      <link href="/2019/11/13/eof-in-windows/"/>
      <url>/2019/11/13/eof-in-windows/</url>
      
        <content type="html"><![CDATA[<h1 id="Windows-中神奇的字元-Z-替換"><a href="#Windows-中神奇的字元-Z-替換" class="headerlink" title="Windows 中神奇的字元 :  ^Z (替換)"></a>Windows 中神奇的字元 :  ^Z (替換)</h1><p>在 windows 10 系統中寫 C 程式，真的蠻容易踩雷的。某堂課的作業要處理一個 <code>2 GB</code> 的文字資料，但內容並非純文字，有許多跳脫字元，想說用 <code>fgets</code> 或是 <code>fscanf</code> 應該就可以了，結果處理檔案就一直有問題，資料少很多，想說會不會我不想小心哪裡寫錯了(那時有一陣子沒寫 C code) ，不過我還是先去完成作業的其他部分再來處理這個 。</p><p>作業大致完成後，我首先覺得可能是資料有不乾淨的字元所導致的問題，跟同學討論了一下覺得先處理一些跳脫字元以及非法 Unicode。處理完後，問題依舊還在，然後我再想說不用 <code>fgets</code> 跟 <code>fscanf</code> 改用 <code>fread</code> 會不會就解決了呢？事實發現部會，問題還是在。最後我跟我同學決定把有問題的地方 <code>printf</code> 出來，看看到底出問題那邊是有甚麼東西，結果發現那邊有個 ascii 碼為 <code>0x1A</code> 的字元。上網查了一下發現 Windows 竟然把它當 <code>EOF</code>！我的天啊，太誇張了。這個 Bug 不知道找了多久了，結果問題出在系統上…….</p><p>最後靠別的系統把檔案裡的所有 <code>0x1A</code> 字元都處理掉後，一切就恢復正常了。</p><p>然後自己測試了一下</p><ol><li>寫個字串裡面有 <code>0x1A</code> 的字元到檔案裡</li><li>讀出來比對字元數是否一致</li></ol><h3 id="寫檔"><a href="#寫檔" class="headerlink" title="寫檔"></a>寫檔</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE* fptr = fopen(<span class="string">"testEOF.txt"</span>, <span class="string">"w"</span>);</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span> ; i &lt; <span class="number">20</span> ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>((i + <span class="number">1</span>) % <span class="number">10</span> == <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">fprintf</span>(fptr, <span class="string">"%c"</span>, <span class="number">0x1A</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">fprintf</span>(fptr, <span class="string">"%c"</span>, <span class="string">'a'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="讀檔"><a href="#讀檔" class="headerlink" title="讀檔"></a>讀檔</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE* fptr = fopen(<span class="string">"testEOF.txt"</span>, <span class="string">"r"</span>);</span><br><span class="line">    <span class="keyword">char</span> c, count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">fscanf</span>(fptr, <span class="string">"%c"</span>, &amp;c) != EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"[%d] %c\n"</span>, (++count),  c);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Bytes: %d\n"</span>, count);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="執行結果"><a href="#執行結果" class="headerlink" title="執行結果"></a>執行結果</h3><p>結果真的在那個字元結束。 太神奇了~捷克</p><p><img alt data-src="https://lh3.google.com/u/2/d/17uUDhOkFsFkffeIwaAEJsKdjqBhAHGeW=w1918-h952-iv1" class="lozad"></p><h3 id="解決方法"><a href="#解決方法" class="headerlink" title="解決方法"></a>解決方法</h3><ol><li>使用 binary 方式讀取檔案，即可避免</li><li>把它 (<code>0x1A</code>) 處理掉</li></ol><h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><ol><li><a href="https://www.cnblogs.com/Donal/archive/2006/08/14/476178.html" target="_blank" rel="noopener">windows 下getc()返回0x1A表示EOF</a> </li><li><a href="https://stackoverflow.com/questions/13582804/why-can-windows-not-read-beyond-the-0x1a-eof-character-but-unix-can" target="_blank" rel="noopener">Why can Windows not read beyond the 0x1A (EOF) character but Unix can?</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 程式 </category>
          
          <category> C </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> Programming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【基礎篇】C 語言教學</title>
      <link href="/2019/10/11/C-education-2/"/>
      <url>/2019/10/11/C-education-2/</url>
      
        <content type="html"><![CDATA[<h1 id="條件判斷"><a href="#條件判斷" class="headerlink" title="條件判斷"></a>條件判斷</h1><h2 id="if-else"><a href="#if-else" class="headerlink" title="if else"></a>if else</h2><blockquote><p>如果 ( if ) 能重來，我要當天才。可惜沒如果 ( else)。</p></blockquote><p>if else 在程式裡是非常常見的語法。寫程式通常都在解決遇到的問題，而對於問題我們就要去判斷說甚麼時候要做甚麼事等等，所以 if else 是非常重要滴，而用法非常簡單。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(判斷)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//成立的話</span></span><br><span class="line">    <span class="comment">// &lt;-這是註解的意思 </span></span><br><span class="line">    Do something</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//判斷不成立的話</span></span><br><span class="line">    Do something</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>簡單吧！這樣你又學會如何使用了。那出個簡單的題目: 輸入兩個數字，輸出比較大的那個數字。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;a, &amp;b);</span><br><span class="line">    <span class="keyword">if</span>(a &gt; b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d 比較大\n"</span>, a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d 比較大\n"</span>, b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是當我們要判斷更多的時候呢？這時候 if 跟 else 中間可以加個 else if 喔 ！<br>假如我們的題目改成: 輸入兩個數 <code>a</code> <code>b</code>，如果兩個數一樣就輸出<code>a == b</code>；<code>a &gt; b</code> 的話，輸出 <code>a &gt; b</code>； <code>a &lt; b</code> 的話輸出 <code>a &lt; b</code>。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;a, &amp;b);</span><br><span class="line">    <span class="keyword">if</span>(a == b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"a == b\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(a &gt; b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"a &gt; b\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"a &lt; b\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>是不是對程式又更進一步了解了呢？</p><h2 id="Switch"><a href="#Switch" class="headerlink" title="Switch"></a>Switch</h2><blockquote><p>​    我想買一台 switch…</p></blockquote><p>下面大概介紹一下 switch 的語法:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> (變數名稱或運算式)</span><br><span class="line">&#123;</span><br><span class="line">     <span class="keyword">case</span> 符合數字或字元:</span><br><span class="line">         Do something;</span><br><span class="line">         <span class="keyword">break</span>;</span><br><span class="line">     <span class="keyword">case</span> 符合數字或字元:</span><br><span class="line">         Do something;</span><br><span class="line">         <span class="keyword">break</span>;</span><br><span class="line">     <span class="keyword">default</span>:</span><br><span class="line">         Do something;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>switch 會根據後面括號裡的變數值或是判斷式，符合下列 case 的情況去做。那為什麼會需要加 break 呢 ? 因為假如沒有加 break 的話，它會繼續往下執行喔，要注意！ </p><p>舉個例子: </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> number;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;number);</span><br><span class="line">    <span class="keyword">switch</span>(number)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"The number is 1\n"</span>);</span><br><span class="line">           <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"The number is 2\n"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"The number is 3\n"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"The number is not 1, 2, and 3.\n"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程式執行會如下:</p><p>輸入 <code>1</code> 輸出 <code>The number is 1</code><br>輸入 <code>3</code> 輸出 <code>The number is 3</code><br>輸入 <code>10</code> 輸出 <code>The number is not 1, 2, and3.</code></p><p>但如果沒有家 <code>break</code> 會發生甚麼事呢？</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> number;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;number);</span><br><span class="line">    <span class="keyword">switch</span>(number)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"The number is 1\n"</span>);</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"The number is 2\n"</span>);</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"The number is 3\n"</span>);</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"The number is not 1, 2, and 3.\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那程式執行會如下:</p><p>輸入 <code>1</code> 輸出 <code>The number is 1</code><br>                      <code>The number is 2</code><br>                      <code>The number is 3</code><br>                      <code>The number is not 1, 2, and 3.</code><br>輸入 <code>3</code> 輸出 <code>The number is 3</code><br>                      <code>The number is not 1, 2, and 3.</code><br>輸入 <code>10</code> 輸出 <code>The number is not 1, 2, and3.</code></p><p>有沒有發現程式跟預期的不太一樣，因為 <code>switch</code> 只要 <code>case</code> 符合就會一直往下執行直到  <code>break</code> 或是 <code>switch</code> 的程式區塊結束。</p><p>條件判斷的部分就先講到這裡！<br>看可不可以自己寫出一個閏年判斷程式！</p><h1 id="迴圈"><a href="#迴圈" class="headerlink" title="迴圈"></a>迴圈</h1><h2 id="while"><a href="#while" class="headerlink" title="while"></a>while</h2><blockquote><p> 當你的眼睛 瞇著笑 當你喝可樂 當你吵          – 林俊傑 《當你》</p></blockquote><p>while 顧名思義就是當甚麼事情成立的時候就做事情，可以重複做一件事情，簡單語法如下:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(判斷式)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//判斷式成立執行以下程式碼</span></span><br><span class="line">    Do something</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>甚麼事後會用到 while 呢？<br>當你想重複做一件事情時！</p><p>假如我們想讓程式可以一直輸入 2 個數字並輸出相加的結果，程式碼如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;x, &amp;y) != EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d + %d = %d\n"</span>, x , y, x + y);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>說明一下：</p><blockquote><p>scanf 的函式會回傳輸入的個數，例如上方程式碼每當書如兩個數字 scanf 就會回傳 2 。<br>EOF 的意思代表 end of file，這個代表已經到檔案結尾了，數值為 -1。自己在測試執行時按下 ctrl + c 讓程式中止。</p></blockquote><p>假如你還不會 while 迴圈的話，你可能就是下面這種 code 然後執行完再重新執行，自己都要被自己累死。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;x, &amp;y);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d + %d = %d\n"</span>, x , y, x + y);</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以是不是又學到一招好用的招式了呢？</p><h2 id="for"><a href="#for" class="headerlink" title="for"></a>for</h2><blockquote><p>就只為了你</p></blockquote><p><code>for</code> 跟 <code>while</code> 很像，不過它 <code>while</code> 多了兩個欄位，可以方便做一些處理，語法如下:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(初始化變數 ; 判斷式 ; 每執行完一次迴圈做的事情)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//判斷式成立執行以下程式碼</span></span><br><span class="line">    Do something;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因為 <code>for</code> 比 <code>while</code> 多了 前後兩個欄位，很方便處理計數的部分。假如輸入一個 N 我要把 1 到 N 的數字顯示出來，這時 <code>for</code> 就很好用了。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N, i;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;N);</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">1</span> ; i &lt;= N ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>, i);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>假如輸入 <code>10</code> 則會顯示 <code>1 2 3 4 5 6 7 8 9 10</code></p><p><code>i = 1</code> 為變數初始化的部分， <code>i &lt;= N</code> 為判斷式， <code>i++</code> 則是每次迴圈做完就把 <code>i</code> 的值做加一。</p></blockquote><p>這邊就先恭喜你都學會 C 基本的語法了，可以自己多練練。</p><p>程式解題網站:</p><ul><li><a href="https://zerojudge.tw/" target="_blank" rel="noopener">高中生程式解題系統</a></li><li><a href="https://www.hackerrank.com/domains/c" target="_blank" rel="noopener">HackerRank</a></li><li><a href="https://codeforces.com/" target="_blank" rel="noopener">codeforces</a> (會定期舉行競賽，不過時間通常都在台灣的半夜QQ)</li><li><a href="https://leetcode.com/?cong=true" target="_blank" rel="noopener">LeetCode</a> (很多公司會看?)</li></ul><p>如果一開始解題有問題歡迎寄信問我，或者再下方留言！</p>]]></content>
      
      
      <categories>
          
          <category> 教學 </category>
          
          <category> 程式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> learning </tag>
            
            <tag> programming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【入門】C 語言教學</title>
      <link href="/2019/10/03/C-education-1/"/>
      <url>/2019/10/03/C-education-1/</url>
      
        <content type="html"><![CDATA[<h1 id="Hello-world"><a href="#Hello-world" class="headerlink" title="Hello world"></a>Hello world</h1><p>先從最簡單的 C 程式碼說起</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Hello World!"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此程式碼分成兩個部分</p><ul><li>引入的函式庫 <code>#include &lt;stdio.h&gt;</code></li><li>主程式 <code>int main() { ... }</code></li></ul><p><code>main()</code> 是 C 語言程式的一個進入點，每一個可執行的 C 程式都會有一個 main 函式，而後面的小括號 ()是給函式的參數 ( parameters )，此處先不給參數。下面由一對大括號 { } 包起來的程式碼則是 main 函數的程式主體。</p><p>printf()為系統提供的輸出函式，可將<strong>雙引號</strong>內的字串 (string) 顯示在螢幕上，也就是把 Hello World! 印出來，為了要調用此函式讓我們做輸出，需要把先前偉人寫好的 code include 進來，所以在第一行加入 <code>#include &lt;stdio.h&gt;</code>。</p><p><code>main</code>() 前面的 <code>int</code> 代表 main 函數的執行結果要以<strong>「整數」(Integer)</strong> 傳回給呼叫它的程式， 而程式主體中<br>的 <code>return 0;</code> 代表程式將結果 0 傳回，請注意程式主體的每一行敘述必須以分號 ; 做為結束。</p><p>把程式編譯執行後就會再螢幕視窗裡顯示 Hello World! 喔，<strong>是不是很簡單呢?</strong></p><h1 id="Variable-變數"><a href="#Variable-變數" class="headerlink" title="Variable 變數"></a>Variable 變數</h1><p>我們學會了把字串輸出到螢幕上後，接著就是要學如何儲存我們程式執行時的資料，這時我們就需要<strong>變數</strong>來儲存。 變數是程式在執行時，把所需的資料放在記憶體 (memory) 中，並以變數的名稱當作標記，當需要時把資料取出來使用。</p><p>怎樣算是一個變數呢？</p><p><code>int var;    // int 型態的變數，名為 var</code></p><p>這樣就算是宣告了一個名為 var 的變數，儲存方式是以 int 型態 (integer, 整數) 做儲存。如果改成以下宣告方式的話:</p><p><code>int var = 5;     // int 型態的變數，名為 var，初始值為 5</code></p><p>就多了一個初始化的步驟，把變數宣告時給定一個數值。</p><p>所以宣告一個變數只要給它一個它的<strong>資料型態 (data type)</strong> 以及<strong>變數名稱</strong>就可以囉 ！</p><p>以下就是一個範例程式 :</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num1, num2 = <span class="number">5</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"num1 is an uninitialized variable.\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"num2 is an initialized vaiable and its value is %d.\n"</span>, num2);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以試著編譯執行看看，輸出結果會如下:</p><blockquote><p>num1 is an uninitialized variable.</p><p>num2 is an initialized variable and its value is 5.</p></blockquote><p>這邊先解釋一下第二個 printf 雙引號中的 <strong>%d</strong> 為一個引數，是把字串後的其他<strong>引數 (arguement) 值</strong> (也就是num2 的值) 5 給塞進去並以 <strong>10 進位 ( decimal)</strong> 的方式顯示。可以參考<a href="#附錄">附錄</a></p><h1 id="Input-amp-Output"><a href="#Input-amp-Output" class="headerlink" title="Input &amp; Output"></a>Input &amp; Output</h1><p>現在已經大概了解程式在做甚麼了，我們來跟電腦做點小互動吧！</p><p>前面我們已經學會怎麼把東西輸出出來，也了解怎麼儲存一些資料，現在要介紹的是如何透過鍵盤把數字輸入給電腦，並做一些簡單的操作，把我們想要的東西顯示出來。</p><p>首先，我們需要 &lt;stdio.h&gt; 函式庫裡的 <code>scanf()</code> 讓我們做輸入的動作。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;num);<span class="comment">//輸入一個數字</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"num is %d.\n"</span>, num);<span class="comment">//輸出剛剛輸入數字的值</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上程式碼就是一個簡單的輸入輸出。程式執行時，會先等待使用者輸入一個整數；輸入結束後會顯示 <code>num is [剛剛輸入的值]</code> 。<br>你會發現，<code>scanf()</code> 的參數跟 <code>printf()</code> 其實很像，會先有個字串，然後再來是放一些變數。<code>scanf</code> 的字串表示要輸入的格式，此範例程式表示需要輸入一個整數，並以 <code>num</code> 這個變數做儲存。</p><p>問題來了，為什麼 <code>num</code>變數前面會多一個 <code>&amp;</code> 呢​？​<br><code>&amp;</code>　在變數前面的話表示取該變數的記憶體位址，而 <code>scanf()</code> 要把輸入的值傳到變數儲存的地方，所以需要變數的記憶體位址。</p><p>好，那我們現在來寫一個程式，讓使用者輸入兩個整數，並把兩數字相加後做輸出。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num1, num2, sum;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"請輸入兩個數字:"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;num1, &amp;num2);</span><br><span class="line">    </span><br><span class="line">    sum = num1 + num2;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"結果為 %d + %d = %d\n"</span>, num1, num2, sum);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程式編譯執行，並且輸入 5 和 6 的話：</p><blockquote><p>請輸入兩個數字: 5 6<br>結果為 5 + 6 = 11</p></blockquote><p>是不是不難呢？ ：）<br>可以自己參考附錄練習輸入兩個浮點數，輸入完後輸出它的四則運算。</p><p>恭喜，完成入門篇囉！</p><h1 id="附錄"><a href="#附錄" class="headerlink" title="附錄"></a>附錄</h1><h2 id="資料型態-Data-type"><a href="#資料型態-Data-type" class="headerlink" title="資料型態 Data type"></a>資料型態 Data type</h2><table><thead><tr><th align="center">型態</th><th align="center">數值範圍</th><th align="center">大小 (Size)</th></tr></thead><tbody><tr><td align="center">int</td><td align="center">-(2^31) ~ (2^31 - 1)</td><td align="center">4 Byte</td></tr><tr><td align="center">long int</td><td align="center">-(2^31) ~ (2^31 - 1)<br>-(2^63) ~ (2^63 - 1)</td><td align="center">4 or 8 Byte</td></tr><tr><td align="center">long long int</td><td align="center">-(2^63) ~ (2^63 - 1)</td><td align="center">8 Byte</td></tr><tr><td align="center">float</td><td align="center">10^(-37)~10^38</td><td align="center">4 Byte</td></tr><tr><td align="center">double</td><td align="center">10^(-307)~10^308</td><td align="center">8 Byte</td></tr><tr><td align="center">char</td><td align="center">0 ~ 255</td><td align="center">1 Byte</td></tr></tbody></table><h2 id="printf-字串裡的引數表示型態"><a href="#printf-字串裡的引數表示型態" class="headerlink" title="printf 字串裡的引數表示型態"></a>printf 字串裡的引數表示型態</h2><table><thead><tr><th align="center">printf 引數</th><th align="center">表示型態</th></tr></thead><tbody><tr><td align="center">%d</td><td align="center">int (整數)</td></tr><tr><td align="center">%ld</td><td align="center">long int</td></tr><tr><td align="center">%lld</td><td align="center">long long int</td></tr><tr><td align="center">%f</td><td align="center">float (浮點數)</td></tr><tr><td align="center">%lf</td><td align="center">double</td></tr><tr><td align="center">%c</td><td align="center">char 字元</td></tr><tr><td align="center">%s</td><td align="center">char * (字串)</td></tr><tr><td align="center">%x</td><td align="center">int (16進位)</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 教學 </category>
          
          <category> 程式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> learning </tag>
            
            <tag> programming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 Hexo 快速建立 Github 部落格</title>
      <link href="/2019/10/02/hello-world/"/>
      <url>/2019/10/02/hello-world/</url>
      
        <content type="html"><![CDATA[<p>今天決定把自己的 blog 建立在 github 上。在網路上查了其他人都如何在 github 建立，發現有很多工具可以使用 ! 在這邊我介紹我今天使用的工具 <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>!</p><h1 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h1><h3 id="環境架設"><a href="#環境架設" class="headerlink" title="環境架設"></a>環境架設</h3><p>下載 Hexo。(首先要有 <a href="https://nodejs.org/en/" target="_blank" rel="noopener">Nodejs</a>)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>下載完後，就可以建立 blog 的資料夾了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>資料夾內結構大概看起來長這樣:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><p>首先看看網站長如何 (預設 port 4000)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server [-p port]</span><br></pre></td></tr></table></figure><p>更多資訊可以參考 <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">官網 server</a></p><p>恭喜我們可以開始建立部落格了。</p><h3 id="基本設定與操作"><a href="#基本設定與操作" class="headerlink" title="基本設定與操作"></a>基本設定與操作</h3><h4 id="設定-config-yml-檔案"><a href="#設定-config-yml-檔案" class="headerlink" title="設定  _config.yml 檔案"></a>設定  _config.yml 檔案</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">&lt;網站首頁標題&gt;</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&lt;網站首頁子標題&gt;</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&lt;網站說明，不會顯示出來，只會在</span> <span class="string">html</span> <span class="string">裡&gt;</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">&lt;網站關鍵字&gt;</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">&lt;你?&gt;</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">&lt;網站語言，預設</span> <span class="string">en，若要調為繁體中文，則設為</span> <span class="string">zh-TW&gt;</span></span><br><span class="line"><span class="attr">timezonde:</span> <span class="string">&lt;網站的時間區域，如果是台灣的話就設</span> <span class="string">Asia/Taipei&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="string">/**</span></span><br><span class="line"><span class="string">*</span> <span class="string">其他都可以先用預設</span></span><br><span class="line"><span class="string">**/</span></span><br><span class="line"></span><br><span class="line"><span class="string">//</span> <span class="string">這邊介紹可以建立在</span> <span class="string">github</span> <span class="string">page</span> <span class="string">的設定</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repository:</span> <span class="attr">http://github.com/&lt;your</span> <span class="string">github</span> <span class="string">name&gt;/&lt;repository</span> <span class="string">name&gt;.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>其他可以去 <a href="https://hexo.io/docs/configuration" target="_blank" rel="noopener">官網 configuration</a> 看看</p><p>設定完後，可以重新整理網頁(如果你的 hexo server還開著的話)，會發現網頁有些不太一樣，這樣就成功了。</p><h4 id="建立新的文章"><a href="#建立新的文章" class="headerlink" title="建立新的文章"></a>建立新的文章</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new post <span class="string">"你的檔案名稱"</span></span><br></pre></td></tr></table></figure><p>command 下完後，可以在 source/_post 裡面看見 “你的檔案名稱.md”，然後就可以開始用 Markdown 語法開始寫作你的文章了。</p><p>寫完之後，你的網站並不會多那篇文章，因為 hexo 還沒幫你產生它的網頁，所以需要打以下指令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>他就會幫你產生新的網頁，然後一樣重新整理網頁，應該就會有新的文章囉。</p><h3 id="建立在-Github"><a href="#建立在-Github" class="headerlink" title="建立在 Github"></a>建立在 Github</h3><p>hexo 可以透過 git 把你建立完的網頁 push 到你的 repository 裡。</p><p>不過需要先下載 hexo-deployer-git</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>下載完後你就可以把你的網頁 deploy 到你的 github page了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d -g <span class="comment">#他會先 generate 後再 deploy</span></span><br></pre></td></tr></table></figure><p>然後恭喜你就可以去 github page看看了!</p>]]></content>
      
      
      <categories>
          
          <category> 小技術分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Github page </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>畢業團拍</title>
      <link href="/2018/11/24/graduated/"/>
      <url>/2018/11/24/graduated/</url>
      
        <content type="html"><![CDATA[<p>11/19 號是我們資工系畢業個人拍照及團體拍照的時間。先說畢業紀念冊的部分好了，原先以為畢業紀念冊是人人都會買的東西，就像高中國中或是小學，幾乎每個人都會訂畢業紀念冊，甚至是在班級上不活躍的人。但是到大學好像又不太一樣了，大學畢冊還有分班冊(系上的)以及年鑑(全校)，而資工系是個大系(約100人左右)，系上的課沒有特別分班上(就選課時自己選老師)所以有很多小群體，整體來說不團結。最後我們班買班冊的只有8個人左右，買年鑑的也差不多(可能認識外系的不多ㄅ)，團體拍照大概也只有27人，人超級少的，比例上也是。 </p><p>我們拍攝時間是下午一點，剛好那天天氣也不錯，所以拍照起來汗流得特別多，但是我的鼻水流的也特別多……時不時打幾個噴嚏鰻不舒服的，為什麼偏偏在拍照的時候過敏呢？拍照流鼻涕超不舒服的，雖然這不是重點。在一開始大家都穿好學士服站在大禮堂前面時，攝影師站在他的相機前幫我們喬位置，喬著喬著突然「砰！」的一聲，大家看到一個人騎著腳踏車撞上了相機的腳架！好險那個人即時把腳架抓住，讓相機沒有摔到地上，不過攝影師馬上衝過去跟她「喂喂，你在做甚麼！騎個腳踏車也會撞上腳架，騎車都不好好看路的」，好在相機沒事，攝影師就讓他走了，不過攝影師還是很生氣，然後對著我們問可不可以比他中指、罵髒話，我們一致點頭XD。我們也覺得撞上腳架蠻誇張，一個那麼明顯的東西在路上也可以撞到。攝影師也說他人生第一次遇到相機被撞，覺得很無言……。 大禮堂部分拍完，剩下就找了三個地點拍，資工館、噴水池以及圖書館前面拍照，這些地方沒有啥有趣的事情就不贅述了。之後就是找時間和同學去拍畢業照了。</p>]]></content>
      
      
      <categories>
          
          <category> 中正大學 </category>
          
          <category> 資工系 </category>
          
          <category> 畢業季 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 畢業 </tag>
            
            <tag> 資工系 </tag>
            
            <tag> 趣事 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018 Arm Design Contest心路歷程</title>
      <link href="/2018/11/18/2018-arm-design-contest/"/>
      <url>/2018/11/18/2018-arm-design-contest/</url>
      
        <content type="html"><![CDATA[<h1 id="比賽緣起"><a href="#比賽緣起" class="headerlink" title="比賽緣起"></a>比賽緣起</h1><p>今年5、6月的時候跟專題組員開始參加了這個為期約3到4個月的比賽。比賽內容主要就是要用他們提供的開發版做一個能促進智慧生活的作品，而身為資工系幾乎沒碰過開發版的我當然會覺得怕怕的，那為什麼會參加呢？因為專題老師就說把專題的東西拿去參加弄個第一名回來，心裡面當然就是挖靠，但不過那時想一想比個賽若能拿個名次對推甄也是不錯的，所以也就開始了這條不歸路。 這次比賽提供的開發版是意法半導體(STMicroelectronics)下的STM32F469 (如圖一，官網<a href="https://www.st.com/en/evaluation-tools/32f469idiscovery.html" target="_blank" rel="noopener">連結</a>)，一個基於ARM Cortex M4低功耗開發版。比賽會提供一天的訓練課程教(分南北兩區)你如何用他們提供的開發軟體做開發，但是在去這個課程以前，教授就先幫我們買了幾塊開發版叫我們要開始開發，一個偷跑的概念XD 。一開始看到可以用C去做軟體開發，覺得”哇! 應該不會太困難”，結果去參考一下一些範例程式時，怎麼好像有點陌生了(?)，好多看不太懂的code，到後面才了解原來是一些硬體操控的部分。第一次碰這個還真的有些難度，許多問題不像之前PC開發，Stack Overflow找一下就有了，可能要特定幾個論壇的文章才找的到。 <img alt data-src="https://www.st.com/content/ccc/fragment/product_related/rpn_information/board_photo/group0/e0/b4/a0/64/2f/ff/40/c7/stm32f469i-disco.jpg/files/stm32f469i-disco.jpg/_jcr_content/translations/en.stm32f469i-disco.jpg" class="lozad"></p><p>圖一 STM32F469實體圖</p><h1 id="初賽之路"><a href="#初賽之路" class="headerlink" title="初賽之路"></a>初賽之路</h1><p>在去比賽提供的教學課程前，我們做的東西已經遇到一些想問的問題了，而且想說到那裏應該也可以再學到不錯的東西。到了那邊以後，他的課程我發現不會的東西還是聽不太懂(硬體電路的port)，不過因為我們比較少用到那部分所以想說應該還好，中間最爽的是他們有有獎徵答，第一題題目真的蠻簡單的，然後竟然送了ASUS的行動電源(10050mAh)上面還有印Arm的字樣，拿了這個就覺得這趟值得了，而且大家看到獎品是這個也開始踴躍回答，不過這獎品只有三個，呵呵。不過我們參加課程最主要的目的是要問我們的問題(我們的問題是如何連上wifi，他們課程只有說如何當AP)，但是兩位工程師講解的工程師卻沒有做過相關的開發，所以當下也沒辦法幫我們解決，而我們只能回去靠自己了。 </p><p>先說初賽要繳交的項目是<strong>文件</strong>以及<strong>實作影片</strong>。從課程結束到繳交大概就是3個月的時間，時間真的要好好規劃，分工也是要好好分QAQ。我們前面大概兩個禮拜有別的報告要忙所以沒甚麼進展，大概就是畫好GUI，能夠觸控。中間兩個月就全力拚了(有嗎?)，我們在開發版上最一開始就只需要錄音、上傳下載、播音，把錄到的聲音存在記憶體然後傳給Server，再接收回來處理過的聲音做播音。但是一切想得有點美好，wifi的問題特別多，不知道為什麼Bug會一直出現，一開始由某隊員寫這邊的code，寫一寫問題就開始冒出來了，連線到一半當機、response的資料大一點(大概才幾KB)也掛掉。然後他完全沒有頭緒的Debug，到後來換個人力幫忙Debug，看了原本那個隊員寫的code後就爆氣了，一大堆問題，於是他決定自己重新寫那部分的code，然後一個月就這樣過去了QQ。</p><p>解決了90%連線的Bug，剩下一個我們目前還是無解的問題，就是有時候code的改一改(最誇張的時候是只有加一行變數)，傳輸音檔時就會卡在第二個(整個音檔會分成許多個小檔案傳送，固定死在那個)。而中間有一次的技術諮詢，我們問了工程師他也不太清楚這個問題點在哪裡，感覺要trace到很底層才有可能會知道。 剩下一個半月的時間，一個月在處理wifi、錄音跟GUI的整合，最後就是處理影片和文件。首先整合 wifi 跟錄音就又有很多問題了。先說wifi是在FreeRTOS上運作的，而錄音的code是沒有OS的，所以我們是打算把錄音的 code 合進 wifi 那支 code 裡面，合進去錄音部分馬上就掛了，原本雙聲道的音檔，播出來的感覺像是快轉一樣，直接被嚇死。開始去Debug，覺得應該是 frequency 或是雙聲道播到單聲道的音檔了，結果好像都不是，然後這個問題又卡了兩三天，突然覺得應該是底層的 code 影響的，赫然發現兩邊底層的code版本不一樣?! wifi那邊的比較舊，於是把那邊改成新版的問題就解決了! 感覺這問題不應該卡這麼久…不過已經解決了就不跟他計較。最後就只剩跟GUI合併囉，但發現更困難，因為我們GUI是用專門設計GUI軟體開發的，整個檔案結構都不太一樣，合併就又出問題了，只好放棄這條路了，重新手劃頁面，當然畫面就醜很多了，但沒辦法只能這樣了，畫面當然也被老師噹了好幾次。 </p><p>當所有程式都弄好了，距離繳交出賽資料也只剩兩個禮拜左右了，當然就開始處理最重要的拍影片還有文件撰寫。文件應該算第一次寫這種比賽的文件，給老師過目不下十次，每次幾乎都是大改，主要負責的同學也覺得心累。而影片也是先把腳本內容給老師看，大概改了兩三次就開始拍版本一的影片，結果當然是問題很多，幾乎很多段都重拍了，那時候差不多是開學前一個禮拜，大家開始有些事情了(好像是我事情最多XDD)，很難喬一個拍攝時間，所以拖了一個禮拜才出來，好險老師好像還蠻滿意第二版，所以影片部分比較順利一些。 初賽的部分就到這裡了。才沒有!文件內容我們在繳交前一天才改完，那時候差不多凌晨三點ㄅ，然後我最後一個改的，改完就上傳，然後心安的去睡了。結果到繳交日截止時間(中午12點)前十分鐘，主辦單位好心提醒我們上傳的檔案格式是錯的!然後最後改版完的文件只有我的電腦有(傻眼)。當下我超緊張的，那時剛還在辦別的事情，收到這個訊息的時侯，還好身上帶著電腦，還好有位子可以給我用。幸好在最後5分鐘完成了，完全是在跟時間賽跑。</p><h1 id="邁向決賽"><a href="#邁向決賽" class="headerlink" title="邁向決賽"></a>邁向決賽</h1><p>初賽繳交結束到成績出來大概隔兩個禮拜吧，這時間大概休息了一下開學事情也還蠻多的，而且還要準備研究所推甄的東西，所以這段期間沒甚麼進度，就乖乖等成績出來哈哈哈。我們都是很有信心可以進決賽，沒甚麼再擔心，結果也如我們預期出來進了決賽。而出來後還有一個是要比人氣獎的活動，主辦單位會把每組的影片丟到粉絲專頁，然後過個十天看誰的留言和分享總和最多就可以獲得最佳人氣獎<a href="https://www.facebook.com/ArmTaiwan/videos/336559903761727/" target="_blank" rel="noopener">影片連結</a>。</p><p>我們這組大概只有我有在宣傳吧，分享數大概就四十幾，我認識的大概快三十個……好在這不是我們的目標，前兩名的分享數都到了兩三百左右。這個比完大概就是最後的口頭報告及作品展示，然後我們最後也在試著演練Demo的部分。 我們作品主要是做聲音轉換，而原先只有轉換一個目標的聲音，老師覺得太少了(我們其實也覺得)，所以只好再多轉一個目標。我們就在比賽前五天左右吧，快速的再訓練出一個模型可以轉換成另一個目標，一開始挑了蠟筆小新，結果效果不是很好，所以又重新找了一個。想了許多知名藝人和卡通人物，老師覺得既然是要給評審聽的，那就轉科技部部長吧，於是我們就又訓練了一次(累死了QQ)。好在我的轉換效果還不錯，同組組員的就時好時壞，所以最後決定主要是用我的聲音做轉換，需要時再用同組組員做轉換。 </p><p>到了比賽當天，超緊張的！第一次參加這種大型比賽，而且還有專業攝影師會幫我們拍照，還會錄製作品簡介影片！一開始再準備展示的時候，差點嚇死了。我們展示的部分中包括了youtube，結果好死不死，平常沒甚麼事的youtube竟然掛了……覺得超級雖，這種事都會被我們遇到，好險厲害的Google過了大概三十分鐘到一小時把它修好了(謝天謝地)。接下來就是各組論流到一間會議室報告，全部報告完後，評審們就一組一組的去看Demo。我們的報告和Demo都算順利的結束，覺得應該有機會進前三吧。 決賽結束後一兩天，結果就出爐了，結果只有佳作，有些難過，畢竟也花了很多時間及心力去做這項作品，不過樂觀的看，有獎比沒獎好了。最後就只能以佳作作為這段回憶的收尾，經歷了一段特別的比賽之旅，不過開心的是這也是我們這組的專題，同時做完也是不錯的！ 希望以後有參加的人，可以拿下好成績，並好好享受這段回憶。</p>]]></content>
      
      
      <categories>
          
          <category> 比賽 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Arm Design Contest </tag>
            
            <tag> STM32F469 </tag>
            
            <tag> Voice Conversion </tag>
            
            <tag> 柯南領結 </tag>
            
            <tag> 變聲器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大學過了三年......</title>
      <link href="/2018/07/06/threeyear/"/>
      <url>/2018/07/06/threeyear/</url>
      
        <content type="html"><![CDATA[<p>大學過了三年，準備要開始最後一年了。自己的Blog才剛弄好，一切都覺得有點晚了，但說實在許多事只就要開始做了就永遠不嫌晚。共勉之。 順便說說這學期修課應該是收穫最多的吧，每個禮拜專題的壓榨，研究所的課的各種project，辛苦總有收穫的，有機會的話，我會說說修課心得的。</p>]]></content>
      
      
      <categories>
          
          <category> 中正大學 </category>
          
          <category> 資工系 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大學 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
